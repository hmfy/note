import{_ as t,c as l,a as o,d as a,o as c,r as i}from"./app.eb5de290.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"如何使用 git pull 拉取代码并覆盖本地修改","slug":"如何使用-git-pull-拉取代码并覆盖本地修改","link":"#如何使用-git-pull-拉取代码并覆盖本地修改","children":[]}],"relativePath":"article/git pull 覆盖本地代码.md"}'),_={name:"article/git pull 覆盖本地代码.md"},p=a('<h2 id="如何使用-git-pull-拉取代码并覆盖本地修改" tabindex="-1">如何使用 git pull 拉取代码并覆盖本地修改 <a class="header-anchor" href="#如何使用-git-pull-拉取代码并覆盖本地修改" aria-hidden="true">#</a></h2><p>某些情况下需要拉取远程修改，并覆盖本地的所有代码，网上很多说法是加上 <code>--force</code></p><p>但是实际使用发现，此操作会将线上和本地的修改强行合并，出现与预期不符的情况</p><p>可以采用 <code>git checkout .</code> 命令，忽略本地所有的更改</p><p>再使用 <code>git pull</code> 就可以总是使用远程最新的代码</p>',5);function r(s,n,d,u,g,h){const e=i("VisitLog");return c(),l("div",null,[p,o(e)])}const T=t(_,[["render",r]]);export{f as __pageData,T as default};
