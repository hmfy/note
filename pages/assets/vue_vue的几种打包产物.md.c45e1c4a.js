import{_ as o,c as s,a,d as r,o as t,r as n}from"./app.9feacaa1.js";const m=JSON.parse('{"title":"vue.global.js","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue的几种打包产物.md"}'),d={name:"vue/vue的几种打包产物.md"},u=r('<h1 id="vue-global-js" tabindex="-1">vue.global.js <a class="header-anchor" href="#vue-global-js" aria-hidden="true">#</a></h1><p>用于开发环境，带有警告信息</p><h1 id="vue-global-prod-js" tabindex="-1">vue.global.prod.js <a class="header-anchor" href="#vue-global-prod-js" aria-hidden="true">#</a></h1><p>用于生产环境，无警示信息，IIFE 形式</p><blockquote><p>IIFE，立即执行函数表达式，可用于 script 标签直接引入</p><p>因为是立即执行函数返回了 Vue，并将赋值给全局变量 Vue</p></blockquote><h1 id="vue-esm-browser-js-和-vue-esm-bundler-js" tabindex="-1">vue.esm.browser.js 和 vue.esm.bundler.js <a class="header-anchor" href="#vue-esm-browser-js-和-vue-esm-bundler-js" aria-hidden="true">#</a></h1><blockquote><p>用于对 esModule 环境支持</p><p>browser.js 是直接给浏览器使用的</p><p>bundler.js 是给打包工具使用的，包含 p<wbr>rocess.env.NODE_ENV 等 node 环境变量，例如</p><p>bundler.js 在提供给打包工具引入时，可配置 <strong>VUE_OPTIONS_API</strong> 环境变量用于关闭 vue3 对选项式 API 的支持</p></blockquote><h1 id="commonjs-输出" tabindex="-1">commonjs 输出 <a class="header-anchor" href="#commonjs-输出" aria-hidden="true">#</a></h1><blockquote><p>用于服务端渲染</p></blockquote>',9);function c(l,_,p,i,h,b){const e=n("VisitLog");return t(),s("div",null,[u,a(e)])}const j=o(d,[["render",c]]);export{m as __pageData,j as default};
